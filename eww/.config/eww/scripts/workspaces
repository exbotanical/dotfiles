#!/usr/bin/env bash

# TODO: config from file?
declare -a COLORS=(
  '#01d9fa'
  '#f5db69'
  '#2d9abe'
  '#2bc7e3'
  '#a8ff4b'
  '#19e4e0'
  '#17dec9'
  '#14d8b3'
  '#11d29d'
  '#0fcc87'
)
EMPTY='#313244'
FOCUSED='#ffa7f6'

# get initial focused workspace
focusedws=$(i3-msg -t get_workspaces | gojq -r '.[] | select(.focused==true) | .name')

declare -A occupied_workspaces=([1]=0 [2]=0 [3]=0 [4]=0 [5]=0 [6]=0 [7]=0 [8]=0 [9]=0 [10]=0)
declare -A workspaces # Map<WsNum, Monitor>

# set color for each workspace
status () {
  local ws_id="$1"
  if (( "${occupied_workspaces[$ws_id]}" == 1 )); then
    if (( "$focusedws" == "$ws_id" )); then
      echo -n "$FOCUSED"
    else
      echo -n "${COLORS[$ws_id]}"
    fi
  else
    echo -n "$EMPTY"
  fi
}

# handle workspace create/destroy
workspace_event () {
  occupied_workspaces[$1]=$2
  while read -r k v; do
    workspaces[$k]="$v";
  done < <(i3-msg -rt get_workspaces | gojq -r '.[]|"\(.name) \(.output)"')
}

# get all apps titles in a workspace
applist () {
  local ws="$1"

  apps=$(i3-msg -t get_workspaces | gojq -jr '.[] | select(.num == '"$ws"') | .name + "\\n"')
  echo -En ${apps%"\n"}
}

# generate the json for eww
generate () {
  echo -n '['

  for i in {1..10}; do
    echo -n ''$([ $i -eq 1 ] || echo ,) '{ "number": "'"$i"'", "color": "'$(status "$i")'" }' #, "tooltip": "'$(applist "$i")'" }'
  done

  echo ']'
}

# setup

# add workspaces
while read -r k v; do
  workspaces[$k]="$v";
done < <(i3-msg -rt get_workspaces | gojq -r '.[]|"\(.name) \(.output)"')

# check occupied workspaces
for num in "${!workspaces[@]}"; do
  occupied_workspaces[$num]=1
done
# generate initial widget
generate

# main loop
# TODO: multi-monitor support
i3-msg -t subscribe '["workspace"]' --monitor | while read -r line; do
  change=$(echo "$line" |  gojq -r '(.change)')
  ws_id=$(echo "$line" |  gojq -r '(.current) | (.name)')

  case $change in
    'init')
      workspace_event "$ws_id" 1
    ;;

    'focus')
      focusedws="$ws_id"
    ;;

    'empty')
      workspace_event "$ws_id" 0
    ;;

  esac

  generate
done
