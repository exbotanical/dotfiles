#!/usr/bin/env bash
# TODO: fix (for some reason eww cannot parse the returned JSON array)
TMP=/tmp/dunst-history.json

notif() {
  declare -i ids=($(dunstctl history | gojq '.data[] | .[].id.data'))
  local i=0
  declare notifications=()

  for id in "${ids[@]}"; do
    mapfile -t notification < <(gojq -r ".data[] | .[] | select(.id.data == $id) | .appname.data, .icon_path.data, .summary.data, .body.data" "$TMP" | sed -r '/^\s*$/d' | sed -e 's/\%/ percent/g')
    # notifications[$i]="{\"application\":\"${notification[0]}\",\"title\":\"${notification[1]}\",\"body\":\"${notification[2]}\"}"
    notifications[$i]="${notification[*]}"
    ((i++))
  done

  # echo "[$(echo "${notifications[*]}" | sed -e 's/\s\+/,/g' )]"
  echo -e "${notifications[*]}" | gojq --slurp --raw-input 'split("\n")[:-1] | map({application: split(" ")[0], title: split(" ")[1], body: split(" ")[2]})'
}

notif
tail --follow $tmp 2> /dev/null | grep --line-buffered "aa{sv}" | while read -r; do
  notif
done
